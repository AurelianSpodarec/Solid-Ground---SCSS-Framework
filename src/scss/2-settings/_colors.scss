// ==========================================================================
// # Colors
// ==========================================================================
//
//	Useful Link: https://material.io/design/color/#tools-for-picking-colors
//	Problem naming colors? Read use this: http://chir.ag/projects/name-that-color/
//
//	Table of Content
//
//  - Project colors
//  - Project Color Palette
//
//


// $solid-ground-colors: (
//   'primary': #8e3329, 
//   'accent': #d98328,
//   'secondary': #5a1321,
//   'foreground': #191919,
//   'background': #e9e9e9
// );

$solid-ground-key: 'base' !default;

$solid-ground-colors: (
  'primary': (
    'base': #8e3329,
    'light': #d9534f,
    'dark': #c9302c
  ),
  'accent': (
    'base': #d98328,
    'light': #dd8f3d,
    'dark': #c57623
  ),
  'secondary': (
    'base': #5a1321,
    'light': #7b1a2d,
    'dark': #51111e
  ),
  'foreground': (
    'base': #191919,
    'light': #333333,
    'dark': #111111,
    'darker': #000000
  ),
  'background': (
    'base': #e9e9e9,
    'light': #ffffff,
    'dark': #dddddd
  )
);

@function solid-ground(
  $name: 'primary',
  $variant: $scotch-color-key,
  $opacity: 1
) {
  $color: null;
  
  // Get the color spectrum
  $color-spectrum: map-get($scotch-colors, $name);
  
  // Get the color variant
  @if $color-spectrum {
    $color: map-get($color-spectrum, $variant);
  }
  
  // Get the alpha setting
  $alpha: if(type-of($opacity) == 'number', $opacity, map-get($scotch-opacity, $opacity));
  
  // Set the alpha of the color
  @if $alpha {
    $color: rgba($color, $alpha);
  }
  
  @return $color;
}


// $primary-color: color("materialize-red", "lighten-2") !default;
// $primary-color-light: lighten($primary-color, 15%) !default;
// $primary-color-dark: darken($primary-color, 15%) !default;

// $secondary-color: color("teal", "lighten-1") !default;
// $success-color: color("green", "base") !default;
// $error-color: color("red", "base") !default;
// $link-color: color("light-blue", "darken-1") !default;